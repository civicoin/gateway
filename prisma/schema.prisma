datasource db {
    provider = "mongodb"
    url      = env("MONGODB_URL")
}

generator client {
    provider      = "prisma-client-js"
    binaryTargets = ["native", "debian-openssl-3.0.x"]
}

model System {
    id          String            @id @default(uuid()) @map("_id")
    name        String            @unique
    description String?
    coin        String
    restriction SystemRestriction
    core        Core
    issuance    Issuance
    password    String
    status      SystemStatus
    created     DateTime          @default(now())
    updated     DateTime          @updatedAt
    decimals    Int               @default(2)
    members     Member[]
}

model Member {
    id       String @id @default(uuid()) @map("_id")
    system   System @relation(fields: [systemId], references: [id])
    systemId String
    name     String
    password String

    publicKey  String?
    privateKey MemberPrivateKey?

    status  MemberStatus
    created DateTime     @default(now())
    updated DateTime     @updatedAt

    @@unique(name: "systemName", [systemId, name])
}

model MemberPrivateKey {
    id                  String   @id @default(uuid()) @map("_id")
    encryptedPrivateKey String
    innerIv             String
    innerSalt           String
    innerAuthTag        String
    outerIv             String
    outerAuthTag        String
    created             DateTime @default(now())

    member   Member @relation(fields: [memberId], references: [id], onDelete: Cascade)
    memberId String @unique
}

enum SystemRestriction {
    PRIVATE
    PUBLIC
}

enum Core {
    CORE
}

type Issuance {
    type  IssuanceType
    limit Int?
}

enum IssuanceType {
    LIMITED
    UNLIMITED
}

enum SystemStatus {
    ACTIVE
    DELETED
}

enum MemberStatus {
    VALIDATING
    REJECTED
    ACTIVE
    DELETED
}
